Compiling it:
get-eedid:
type make -f Makefile.get-eedid
Needs libi2c from i2c-tools and probably linux-headers.

parse-edid: (deprecated)
type make -f Makefile.parse-edid
Shouldn't need anything special.

Running it:
USAGE: get-eedid [-s] [-d] [-o <output template>] <device path>
-s      SMBus mode.
-d      DDC2B mode.
-o      Output template, in DDC2B mode '{}' will be replaced
    with the page number.  In SMBus mode, it'll just be omitted.
<device path> Path to i2c device.

)deprecated)
USAGE: parse-edid <edid file>


parse-edid2:
Not very familiar with python packaging so no idea if the setup.py works but
you can just run parse-edid2.py from the directory it's in anyway.  You will
probably need the kaitaistruct runtime.  Only tested with python 3.6, probably
works on some earlier 3.x pythons, haven't tested any 2.x ones and don't
really care to.

Running it:
./parse-edid2.py <path to edid dump>


I would like some more EDID samples.  I'd put up the ones I have but I'm
unclear about distribution rights for EDID dumps so I'm going to err on the
side of caution until I hear otherwise.

match-display.py
Match a display based on criteria provided on the command line.  Checks in
/sys/class/drm/ and scans each device's provided EDID and will match values
provided as name=value pairs on the command line.  Will return an xrandr
device name which can be used in scripts (examples provided) to perform
various actions on displays.  I haven't tested this on many devices at all, so
there will probably be compatibility issues and bugs.

Usage:
./match-display.py [name=value] ...

Provide no criteria to get a list.

Criteria which can be matched are:
These may be given in mixed case and may include spaces or _s
Any can be given, but a match will only be returned if it's unique among
connected displays.
Not all fields may be available for any given device.

card - the GPU/card ID
connectortype - type of connector, DisplayPort/HDMI/etc
connector - the number of the connector
headerchecksum - the checksum of the EDID provided by the EDID
calcchecksum or calculatedchecksum - the checksum as calculated
manufacturerid - 3 letter manufacturer ID, any case is fine
productcode - numerical product code
numericserial - numerical serial number
prodweek or productionweek - week of production
prodyear or productionyear - year of production
modelyear - model year
name - name of the device
serial - serial number (may be different from numericserial)
